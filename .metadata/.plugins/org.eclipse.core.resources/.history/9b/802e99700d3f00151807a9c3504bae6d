package utilitario;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;

import javax.swing.border.Border;

public class Borda implements Border {

	private boolean esquerda = false;
	private boolean direita = false;
	private boolean topo = false;
	private boolean baixo = false;
	private Color color = new Color(53, 56, 64);

	public Borda(boolean esquerda, boolean direita, boolean topo, boolean baixo, Color color) {
		this.esquerda = esquerda;
		this.direita = direita;
		this.topo = topo;
		this.baixo = baixo;
		this.color = color;
	}

	public void paintBorder(Component c, Graphics g, int x, int y, int width,
			int height) {
		
		if (direita && topo) {
			g.setColor(new Color(53, 56, 64));
			g.fillRect( 0, 0, width ,  height);
			
			g.setColor(new Color(31, 32, 37));
			g.drawRect( 0, + 5, width - 6, height);

			g.setColor(new Color(r, g, b));
			g.fillRect( 0, 0, width ,  0);
			
			
		} else if (direita) {
			g.setColor(new Color(31, 32, 37));
			g.drawRect(width - 4, y, 10, height);

			g.setColor(new Color(53, 56, 64));
			g.fillRect(width - 3, y, 10, height);
		} else if (topo) {
			g.setColor(new Color(31, 32, 37));
			g.drawRect(-2, y + 4, width + 4, 0);

			g.setColor(new Color(53, 56, 64));
			g.fillRect(0, y + 1, width + 4, 3);
		} else if (baixo) {
			g.setColor(new Color(31, 32, 37));
			g.drawRect(-2, y + height + -3, width + 4, 1);

			g.setColor(new Color(53, 56, 64));
			g.fillRect(0, y + height + -2, width + 4, 4);
		}
	}

	public Insets getBorderInsets(Component c) {
		return new Insets(0, 0, 0, 0);
	}

	public boolean isBorderOpaque() {
		return true;
	}
}
